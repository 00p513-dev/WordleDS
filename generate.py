#!/usr/bin/env python3

import git
import json
import re
import urllib.parse

from datetime import datetime
from os import mkdir, path, system
from PIL import Image
from textwrap import dedent


def lastUpdated(sevenZip):
	"""Gets the latest date from the items in a zip"""

	latest = None
	for item in sevenZip.list():
		if latest is None or item.creationtime > latest:
			latest = item.creationtime

	return latest


def downloadScript(mod: str, inFolder: bool) -> list:
	"""Makes a script to download the specified mod"""

	modName = mod[mod.rfind("/") + 1:mod.rfind(".")]

	return [
		{
			"type": "downloadFile",
			"file": "https://raw.githubusercontent.com/Epicpkmn11/WordleDS/mods/" + urllib.parse.quote(mod),
			"output": f"/{modName}.zip"
		},
		{
			"type": "extractFile",
			"file": f"/{modName}.zip",
			"input": (modName + "/") if inFolder else "",
			"output": f"/_nds/WordleDS/{modName}/"
		},
		{
			"type": "deleteFile",
			"file": f"/{modName}.zip"
		}
	]


# Read version from old unistore
unistoreOld = {}
if path.exists(path.join("unistore", "wordle-ds.unistore")):
	with open(path.join("unistore", "wordle-ds.unistore"), "r", encoding="utf8") as file:
		unistoreOld = json.load(file)

# Output JSON
output = []

# Create UniStore base
unistore = {
	"storeInfo": {
		"title": "Wordle DS Mods",
		"author": "Pk11",
		"url": "https://raw.githubusercontent.com/Epicpkmn11/WordleDS/mods/unistore/wordle-ds.unistore",
		"file": "wordle-ds.unistore",
		"sheetURL": "https://raw.githubusercontent.com/Epicpkmn11/WordleDS/mods/unistore/wordle-ds.t3x",
		"sheet": "wordle-ds.t3x",
		"description": "Mods for Wordle DS",
		"version": 3,
		"revision": 0 if ("storeInfo" not in unistoreOld or "revision" not in unistoreOld["storeInfo"]) else unistoreOld["storeInfo"]["revision"]
	},
	"storeContent": [],
}

# Icons array
icons = []
iconIndex = 0

# mods.md mod list
modList = open("mods.md", "w")
modList.write("<!-- Do not edit this file manually, it is generated automatically. -->\n")

# Read metadata JSON
with open("meta.json") as file:
	meta = json.load(file)

# Generate UniStore entries
for mod in meta:
	print(mod)

	info = {}
	updated = datetime.utcfromtimestamp(0)
	inFolder = False

	updated = datetime.utcfromtimestamp(int(git.Repo(".").git.log(["-n1", "--pretty=format:%ct", "--", path.join("mods", mod + ".zip")]) or 0))

	created = datetime.utcfromtimestamp(int(git.Repo(".").git.log(["--pretty=format:%ct", "--", mod]).split("\n")[-1] or 0))

	info = meta[mod]

	# Process text for unistore
	author = info["author"] if "author" in info else ""
	author = re.sub(r"\[([^\]]+)\]\([^)]+\)", r"\1", author)  # Remove links

	desc = info["description"] if "description" in info else ""
	desc = re.sub(r"\[([^\]]+)\]\([^)]+\)", r"\1", desc)  # Remove links

	modInfo = {
		"title": info["title"] if "title" in info else mod,
		"version": info["version"] if "version" in info else "v1.0.0",
		"author": author,
		"category": info["categories"] if "categories" in info else [],
		"icon_index": -1,
		"description": desc,
		"license": "Creative Commons Zero v1.0 Universal",
		"last_updated": updated.strftime("%Y-%m-%d at %H:%M (UTC)")
	}

	color = None

	# Make icon for UniStore
	if not path.exists(path.join("unistore", "temp")):
		mkdir(path.join("unistore", "temp"))
	iconPath = None
	if path.exists(path.join("icons", mod + ".png")):
		iconPath = path.join("icons", mod + ".png")

	if iconPath:
		with Image.open(iconPath) as icon:
			icon.thumbnail((48, 48))

			icon.save(path.join("unistore", "temp", str(iconIndex) + ".png"))
			icons.append(str(iconIndex) + ".png")
			modInfo["icon_index"] = iconIndex
			iconIndex += 1

			color = icon.copy().convert("RGB")
			color.thumbnail((1, 1))
			color = color.getpixel((0, 0))
			color = f"#{color[0]:02x}{color[1]:02x}{color[2]:02x}"

	# Add entry to UniStore
	unistore["storeContent"].append({
		"info": modInfo,
		info["title"] if "title" in info else mod: downloadScript(path.join("mods", mod + ".zip"), inFolder)
	})

	# Add to mods.md
	icon = ""
	if iconPath:
		icon = f"![Icon](https://raw.githubusercontent.com/Epicpkmn11/WordleDS/mods/{urllib.parse.quote(iconPath)})"

	modList.write(dedent(f"""
		## {icon} {info["title"] if "title" in info else mod} by {info["author"] if "author" in info else ""}
		{info["description"]}

		Categories: {", ".join(info["categories"]) if "categories" in info else ""}

		Download: [{mod}](https://raw.githubusercontent.com/Epicpkmn11/WordleDS/mods/mods/{urllib.parse.quote(mod)}.zip)
	"""))

# Make t3x
with open(path.join("unistore", "temp", "icons.t3s"), "w", encoding="utf8") as file:
	file.write("--atlas -f rgba -z auto\n\n")
	for icon in icons:
		file.write(icon + "\n")
system("tex3ds -i " + path.join("unistore", "temp", "icons.t3s") + " -o " + path.join("unistore", "wordle-ds.t3x"))

# Increment revision if not the same
if unistore != unistoreOld:
	unistore["storeInfo"]["revision"] += 1

# Write unistore to file
with open(path.join("unistore", "wordle-ds.unistore"), "w", encoding="utf8") as file:
	json.dump(unistore, file, sort_keys=True)
